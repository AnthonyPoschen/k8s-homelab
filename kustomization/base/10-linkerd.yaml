---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRZmpSWm5FSXYzUE5RVW9FdlpYbVFMVEFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakV3TVRZeE1qVTBOREZhRncweU16RXdNVFl4TWpVME5ERmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMTVJb08vdTdaT24zbE1yeG1UTzlVMmh6OHpWa0xCTG9KRnpqZVNJQlNvY3YyVzhGM04zQwpCK3FxcnhaWXpWYjRRbjhkOHMvV1JCNVFlZUIyMytFRWZrLzVKd1IwWndMWGxRdlppVUQzaitHY1JkeW1DSE9DCjRBUUN0YzkyZlhzNG94RmRnRDBQSkRoQlF2M3ZqUHlqYXlBdW10ZnQvekFwMDJROVQ4dFpna0EzZkozdlZUWG8KU092K3NNbitMcURHcGttTjFleXhWdHovNjdBWVl1TS9DV1lEVUZZOFRVRmNEVDJhemdBc1R4ZWVldmVrcnFtago2TmY2bWN3aDZjVnB3WTUvVHVlNE92VXhTVDVNT25VRkpmQTlIeUt3TFlsVmJ2ZENNYjNXMUlIdnBkd2gyaW1KClRLNE40VmlkVmV0WTR2TkV6UklTcDkvMXB1cGJuYjErdlFJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUx2aEQ3U3NkQVNOVzl1UFNOUGhCMmhVdzlEY1ZmeVIyZENUcm1wMjJuQWgKdVAxZzFRb0ZJb01GeUwwTlNtMjZjVVlCWWtEM29ncGkvcWhnL2FlVmE5WDFZWVJTcEs0RVloVkQ0VHNaMjNNTworTWYxK3lCNldhZ2tQQ3ZJODBsNWwyZnNRYllaUFoxVFEwNnNPSDZvTUN1OTJ6UWZZbkJDQjZiV2x1dlZrTWc5CkJ4SzZKRkxlZCtPanpTU1RFSmxLbjJJUEJHRDZDVXdaT1k3VEZJWUd5aWFXL25lYTU3RFkweEsrbGVkMmxET0YKSWliTUFYSEZEbkRKbHR1QUg2QWJhaDNXM05KcDNxWi9zNUNCMnU4WklBVnpMdW5GQXFMU1hucUxDalIybnZtaApWTGlkZVhheXdjN3Y2MTl1M0RNeUZQRW10aE16VEpOR1lSWXRPNjlDSDRZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMTVJb08vdTdaT24zbE1yeG1UTzlVMmh6OHpWa0xCTG9KRnpqZVNJQlNvY3YyVzhGCjNOM0NCK3FxcnhaWXpWYjRRbjhkOHMvV1JCNVFlZUIyMytFRWZrLzVKd1IwWndMWGxRdlppVUQzaitHY1JkeW0KQ0hPQzRBUUN0YzkyZlhzNG94RmRnRDBQSkRoQlF2M3ZqUHlqYXlBdW10ZnQvekFwMDJROVQ4dFpna0EzZkozdgpWVFhvU092K3NNbitMcURHcGttTjFleXhWdHovNjdBWVl1TS9DV1lEVUZZOFRVRmNEVDJhemdBc1R4ZWVldmVrCnJxbWo2TmY2bWN3aDZjVnB3WTUvVHVlNE92VXhTVDVNT25VRkpmQTlIeUt3TFlsVmJ2ZENNYjNXMUlIdnBkd2gKMmltSlRLNE40VmlkVmV0WTR2TkV6UklTcDkvMXB1cGJuYjErdlFJREFRQUJBb0lCQVFDejdaVlJnNnFFNzFncgp4RHhsZ0M3OUtFam5iZC8vZllSdm5XeHNGYnI0SnVBRVgwdUlienZkZWJ3ZlNjcXpFVzFEcTNBbTA5em1uRnJWCmIwb3BVVnA3eDJxUmE0RnczWWx0S1NmWURQYlZEQjF3bmx1aTRDOFRwYVZSZFNsVVVQNFQ5WkdTVU9TTGVielgKR3JiUWVhbzQ1dktmWWEyUGV2YmVMMk9SYjR4MVRuVEdmN094VmlQbTVlMFZVdEdoKzVjTDFBcHkzcEhtRzlFSwo1S0gxaFZyQytsUzdTamFZcmRHRmF2ZFdUYk5FWEtBQmdvUGxpb2NycGxOUk1zMm5Ga3JZTTBlUmxOM3QwZHlPCjA3KzZxRXQ4U0RaM2U5SEZ2VlFMb09vZE9sOGZtakx6SytkOER3TEUvME1Ldml2MlZWUWJ5b1pUQmZsNXlNRUgKQTFVU251YWhBb0dCQU5oai9aUWNVd1VqNm1kbW15WlJQSE15cDF4VVpSVEp0eXorRFA2anF4dVpEREVWZEVJOQpCZVhPR213TjlRbGthZG1wRGIxSzJyTU1jNjBFUkZVOGhSUFRVMmo2VTJIUVVOVTBuNW1tNTR3U29lVWdPeElOCjdpdFRtT0JnbStOVXczTks2a3BaOThiVlBrZFIrNVB6V2xmTUwvM2g5ZVFmL3d6N2U1YWoyTkpwQW9HQkFQOEgKd2VwbXpXdEgwUmVrVnJaVmFMMDBFd0lEamNIbllraXpsb3Q3NVcxOUgwTUsrb2RQaEk3RXh1RmY2cGdCU2M2bwpIQTZ4TUtIY3BHZXVrOE1qczduTFp0blN6NHFzdmo5amxYcmxpOEFERUM0K0J1OVl3ZlU1SnYyd0c3MDY0R1lvCkJiNGlxWm5UVS9udjJGVVNkU3pMZFhaYlc3STdQMUxscU05c0RwYzFBb0dCQUtBdkZNNEpVYU9pZktqaW1jTjUKcTJnVGZUU3AvTkd3cVBxVGJnY3FIVVltdTVHeU1nZStxSmovUXl2dUFSQmMxc2Fia0dJcUFVODl6bnVyaHZJYQpCT0V5TkxLbmJBWWljVlFDeW9xeHRRSko0TEorYzN2ZitBajJyMXFaNll3VmVVSGxtUjVGRDFpUERyVTVDU1R5CnBsUU1BUkxOckhxYy9POGRVdFdtb0tEUkFvR0FWSHB3WE1JUzk1K0JmckJjWE9lcjIwaTlweVFnT0FQNmhaU2YKb0xLNHkrenZoeGpDNWtHTDZuTDZZanVRalN1WUZGR1JnYmhtSUtmaStjbFZmd1Y3aW1iN09kcGdEMUtyYm5vQgpVUVZxcG44ZFJBUWQ3ZmpidnV4Z294Wk1DZ0hQeFdjcWg5SVpsaS92bUZJL3VlWjBWQk5OWkpoY3BveURyR1VRCjV5eW5KS1VDZ1lCNVptT1N0TGVOM3pwZE1Qcjk2SCtoN1YrN29FUm1yRmJ3aldsNmtHUDBMek1GUTAweTErQTQKTVoxaGp5SnV3Qm1VSklEY2R1TCtPRVBZSDFuVGJFSzhVeHhZN1lWVlpUbzFVQ2JBTWtqc2lmR2lka2tUM1R3ZQpNOFBqOGw3cUxWc0pORTgzQUcxaEFVQUZqY0lYVkxDeWkweUN3em1kMGtMNzZsdWhHRkkwckE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRZmpSWm5FSXYzUE5RVW9FdlpYbVFMVEFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakV3TVRZeE1qVTBOREZhRncweU16RXdNVFl4TWpVME5ERmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMTVJb08vdTdaT24zbE1yeG1UTzlVMmh6OHpWa0xCTG9KRnpqZVNJQlNvY3YyVzhGM04zQwpCK3FxcnhaWXpWYjRRbjhkOHMvV1JCNVFlZUIyMytFRWZrLzVKd1IwWndMWGxRdlppVUQzaitHY1JkeW1DSE9DCjRBUUN0YzkyZlhzNG94RmRnRDBQSkRoQlF2M3ZqUHlqYXlBdW10ZnQvekFwMDJROVQ4dFpna0EzZkozdlZUWG8KU092K3NNbitMcURHcGttTjFleXhWdHovNjdBWVl1TS9DV1lEVUZZOFRVRmNEVDJhemdBc1R4ZWVldmVrcnFtago2TmY2bWN3aDZjVnB3WTUvVHVlNE92VXhTVDVNT25VRkpmQTlIeUt3TFlsVmJ2ZENNYjNXMUlIdnBkd2gyaW1KClRLNE40VmlkVmV0WTR2TkV6UklTcDkvMXB1cGJuYjErdlFJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUx2aEQ3U3NkQVNOVzl1UFNOUGhCMmhVdzlEY1ZmeVIyZENUcm1wMjJuQWgKdVAxZzFRb0ZJb01GeUwwTlNtMjZjVVlCWWtEM29ncGkvcWhnL2FlVmE5WDFZWVJTcEs0RVloVkQ0VHNaMjNNTworTWYxK3lCNldhZ2tQQ3ZJODBsNWwyZnNRYllaUFoxVFEwNnNPSDZvTUN1OTJ6UWZZbkJDQjZiV2x1dlZrTWc5CkJ4SzZKRkxlZCtPanpTU1RFSmxLbjJJUEJHRDZDVXdaT1k3VEZJWUd5aWFXL25lYTU3RFkweEsrbGVkMmxET0YKSWliTUFYSEZEbkRKbHR1QUg2QWJhaDNXM05KcDNxWi9zNUNCMnU4WklBVnpMdW5GQXFMU1hucUxDalIybnZtaApWTGlkZVhheXdjN3Y2MTl1M0RNeUZQRW10aE16VEpOR1lSWXRPNjlDSDRZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQU4wTWNmdVFxQjBzRTRsaXB1ZW9Lbzh3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1UQXhOakV5TlRRME1Wb1hEVEl6TVRBeE5qRXlOVFEwTVZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcTgwYnYzWUthL0VsVHRNWDd2bWxCODNpaTFRdzBQWVU5YXJ1bTkybgp0VEU1U1pNRXpTdDRqdlRoUmd4b1Z5MVhyUmRCaVR6clN1RGNpRHNiWmVkTWgyMnJpTjh1SlBuVnBLcWkxZEN2CmV1bVRVUjdxVnRkNndzMjd6YTdYZWZORENVRnBKK0RuV1lvSGhQVTNWZVY5V0lhUldTSWZwd3M4Rjc4SkthUFEKVG5BWU55WjNmOWFvREpvTnZEZFEzR1c2RkdzY1ZkRm9wZyt0VjVBd1ZIWUM5NVNENkxpRXJPQVdzNG9ETkRvQwpidGMvN0thRHR4MXVNSXBqdzlMOTY1WGxPcnBpcUM0VFlaMkFXdEt5Vm91aThSbjNQc2hXWHM5Wms5a0p4QTh2CnR2MVdlOUtXUEJlaVhPc3VaSGxVQTI4bG50ZVhuckVJampXZnU3bGIxNmNZS3dJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlAvdmFqKzlLMTlFTXo2YTBJMlp3L0hMb0sKdHAzVmVZbEhXM25VSjBIUXFUTUtQQnhTMGM2OEJWMWszQnJReExOWTdZQmllSVJYYnRZazl5bE1FZitrWnJJQQpLMGdSM1pYM3Zxa2xHUHU1czZaL2daUTRhT24rWENDRHdjdW5vZ3dZQkVsSEJoLzJ5bUpoVXdLT3hYekg4L01HCjZKVldnR1ZtTi96ZDdVcktrVE5FMFRkTlh5b0hLNkhCVzhXVHVDYTlSRVd5UjhzRnYwSUJZV2s2ODlXQWxjN28KRXcrOFdaQWtKTTlWeEFCSnA3T2dWN2JFUFFyRkg0UXVlNUsyS1AreUtGWVRJNXBvalhjcHl2cjE3QVo5UUQwQQp0SlNUUUhDaDlhL0l5TWhlMHFnb3JNNmNaMjgzUEtPOXh0OXlUOGVpSWEyZ3ZuWWx6RTUrYTU2cXpKYmEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcTgwYnYzWUthL0VsVHRNWDd2bWxCODNpaTFRdzBQWVU5YXJ1bTkybnRURTVTWk1FCnpTdDRqdlRoUmd4b1Z5MVhyUmRCaVR6clN1RGNpRHNiWmVkTWgyMnJpTjh1SlBuVnBLcWkxZEN2ZXVtVFVSN3EKVnRkNndzMjd6YTdYZWZORENVRnBKK0RuV1lvSGhQVTNWZVY5V0lhUldTSWZwd3M4Rjc4SkthUFFUbkFZTnlaMwpmOWFvREpvTnZEZFEzR1c2RkdzY1ZkRm9wZyt0VjVBd1ZIWUM5NVNENkxpRXJPQVdzNG9ETkRvQ2J0Yy83S2FECnR4MXVNSXBqdzlMOTY1WGxPcnBpcUM0VFlaMkFXdEt5Vm91aThSbjNQc2hXWHM5Wms5a0p4QTh2dHYxV2U5S1cKUEJlaVhPc3VaSGxVQTI4bG50ZVhuckVJampXZnU3bGIxNmNZS3dJREFRQUJBb0lCQUZOVjVQWFVubTJKeGQwYwpqR21CYzBuNzFyNWJFbXJxVTNSdmU5cmpoQ3hpT2pXME9Rb0U0akFHSFJoTGdIbDVKeVJ4T1hzR3IrUGNlMTBoCnZzS0psaGZEWFFmQnFyS0k5ZGN3WmxodEtCSHBKMnFjSW5RSmhpVGtnd3JjbXUwdTBQKzJXUG5kSUp2UVZxRnEKQ1hPREpIQkNwbEtrT05KZ29yK3FEUm5EdXBHeEJyR0hUNTZUOTJzSXZJbFpIL0JNRjI0cFl1ZHRLeTFtdTFhOQpTb0FoVTI3TWhKeXhNMXp1d2tkQnZ6V3dFUkNhdjN0WUVkck0rVzRBNXJGemI1T2NjdWh0WE5nTGpNalF1R2FRCnpKYWYyWmZzbHhCZmpTYlpqTWtnV0lVczBQN1M5Vk5mSmRaUHVRcXVaMEVyTE5RK3RwU0Yram9hTi8wWnlGSU8KZ1VyWEIvRUNnWUVBMVVlMG0zSHVaNVd1bk1PZjJSdS8yWWp5a0dyQkRQWGpFVndmTW4yejRIZ0h4NGhDZGQvNQpES1dnV3Q5YUN1b0FTalEyTU1NSm1lY3hTYTdaRU5CME1uQTNEd200OFh3d3NUc3A0Y2QySVZRbXZDd0Y5UkxsCmNqTHlWRW9yR3hKdnRUM3FNazkvRDVUQWhUNzRWMFRmVWRiRUxXcktRYnYydWtiNkVYVGVEZTBDZ1lFQXpqYUEKeDhNVllVZWw4dHpnWWszdFJwN2pSVGxKNWlETlZwSW5SQXhjQnpiVk8za2k5OVVseXh6NHFnODFISktjajFYNAozK01vNk9UWWltWjBOVjBoNzVFZ1VKQk1KeUNxYjQ3b2JFSGVxaWNtenpDSXBSMUlOS0hRYStTZzgyTXVQQkF1CkRjZDUxVExTc1NOc09pQzZ6b1ZvN2hkMGljbENzN0RVdDJUOU8zY0NnWUVBeGpJNmJmRzBJR0tDdjM4elBtaUIKSWtBWFdZazdHVFl1NnVUMndNNzdwMjhqbTVMT1lBZmd3cFh2ckVLK3hFR3NQMGpCeXhLVUM0ZEMwRHhCejFSSApocytzK3JhSVBUQ3hkeUdKekJ5MWRFZGxMNXloZEpzNHlhVDZlTVhyeE42ZkhJZ0s2UEhqRzdHYUxyalR3eFZuCmlmL1FrbndZdEhsZDBNRkFoWlJhL2drQ2dZQW04MTZSM1FSOTBvWERBUHVWTmZqNm5PcDYyZDVlakpXY281Q3QKSnRSL1BGazhtWjRFU0F1U2VROXpOOW9sWW9BV0J2d3lkZnIxT3J5NEw3QUZvR2pYa29jVEVKNkJ5WWJIK2F0bgpQMjNxbitpUnZDNGpXZ3VZZlhRYjNSeVZ2SWN3S3pJM3doVCtNMUpleVQwWkliT0hiT1dzQzF3azVwSWwxT0hwCkhqZEM4d0tCZ1FDNHVHMWErSU9GQkd2VDFjUVZGc1NBTzJKOGEwSHJudmlKYUxxQzRjcUIrL0dEUHJEbVd2clYKVkVqcENPUmZ2eDEvdzU0TDNzVFlKK3IzYzNUTVdlWE1pZ3VqSFFmY1JiMFBnZ2I1M3BXd1VzM2s2Wjk4ZkxyUApIMkE1alIxL0FVUFRIb2gxUDZzWFM1RHQrK0Q1ZW0rblpVRG5od3NKdmtXZ0x4NUhHV1puakE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQU4wTWNmdVFxQjBzRTRsaXB1ZW9Lbzh3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1UQXhOakV5TlRRME1Wb1hEVEl6TVRBeE5qRXlOVFEwTVZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcTgwYnYzWUthL0VsVHRNWDd2bWxCODNpaTFRdzBQWVU5YXJ1bTkybgp0VEU1U1pNRXpTdDRqdlRoUmd4b1Z5MVhyUmRCaVR6clN1RGNpRHNiWmVkTWgyMnJpTjh1SlBuVnBLcWkxZEN2CmV1bVRVUjdxVnRkNndzMjd6YTdYZWZORENVRnBKK0RuV1lvSGhQVTNWZVY5V0lhUldTSWZwd3M4Rjc4SkthUFEKVG5BWU55WjNmOWFvREpvTnZEZFEzR1c2RkdzY1ZkRm9wZyt0VjVBd1ZIWUM5NVNENkxpRXJPQVdzNG9ETkRvQwpidGMvN0thRHR4MXVNSXBqdzlMOTY1WGxPcnBpcUM0VFlaMkFXdEt5Vm91aThSbjNQc2hXWHM5Wms5a0p4QTh2CnR2MVdlOUtXUEJlaVhPc3VaSGxVQTI4bG50ZVhuckVJampXZnU3bGIxNmNZS3dJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlAvdmFqKzlLMTlFTXo2YTBJMlp3L0hMb0sKdHAzVmVZbEhXM25VSjBIUXFUTUtQQnhTMGM2OEJWMWszQnJReExOWTdZQmllSVJYYnRZazl5bE1FZitrWnJJQQpLMGdSM1pYM3Zxa2xHUHU1czZaL2daUTRhT24rWENDRHdjdW5vZ3dZQkVsSEJoLzJ5bUpoVXdLT3hYekg4L01HCjZKVldnR1ZtTi96ZDdVcktrVE5FMFRkTlh5b0hLNkhCVzhXVHVDYTlSRVd5UjhzRnYwSUJZV2s2ODlXQWxjN28KRXcrOFdaQWtKTTlWeEFCSnA3T2dWN2JFUFFyRkg0UXVlNUsyS1AreUtGWVRJNXBvalhjcHl2cjE3QVo5UUQwQQp0SlNUUUhDaDlhL0l5TWhlMHFnb3JNNmNaMjgzUEtPOXh0OXlUOGVpSWEyZ3ZuWWx6RTUrYTU2cXpKYmEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRUVhMVVJlRmU5Um9VbjhaU0JzdFZJVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRBeE5qRXlOVFEwTVZvWERUSXpNVEF4TmpFeU5UUTBNVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNNlQ5S3RDTFNvV0s0SjljcFBXMUE4c2N4Ymp1ckNqK3hrbXdQTm9SVTJTVm45SwpnZnBMNHJLNE84eVl1cUxoZHA0MVZkRi9PZmJzbUMrcWM3NDVvVXdGRnBSL3NDWVc5aDVDV0UzQ3FiTVNQdnVTCjR4bUJ5bnZNNlBGMldwakFYL28zY2VJK0pnOXROUnVmaktjWDFkMWh0NnhUeUZCcTYvbEdkazhaZ2I2elkvR3MKN1VJSHNYa2ExYitkMUpCeEJ0WUN6Q29RaEx2U3dMWmV0RmlvTmF1REp2bEJlaStnTTFPdWQ1Sm50WDlNNUdXWAo3WmRkR3J0bDF2RTY2YkhRYlVRSzFjcFgzQjhHSlR5cmlMNThQdjJXZnNzSmJXaGZsamRrMDJxM1NyY1A1Y1pkCnZOR3dmdHlDaGNodk0rcytqT2M2bEN3WE5zbGJuQWR0UXQzc1ZDVUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRTB3YStTakp4a1JBQjEvQndkZTk0YXVWemhnM2VCYVVtclYKZlN2SStVdnlPdDJPVkF0dDVUTFlGamJ2SGhWWlpxL1BKTmVWWVRJeU83TXF0ZjI5WlUvcU0wKzBsNjMwRThOWgp1TFVNMEpoNE5PcmNERXNRN2s2SGxyRkRZa2VHWHIxT1o2QnNxUzFJK1MremVjUkJmcE1KZTZpbUxmSVRKRjM2CnlEaDIzRDBQMFlFNlBNQlNGTDc4Yk5na3NBRVBMNmMzaVc5QkN2RldISzlBbWNuUnNyMFBHT2h1K3Q3SzRlc3AKdUtpWnQrWVB0aUJ4N09LVzJ6dU1GNjhaTG9rSFROcVhUSnRkZ1ZBby9pUWJQYzNPQXFvSzRGWlJ5ZDhkTElxWgo0K0NXR0xMOVdHdmJUdm9Oa1psZFl2V1pDUlVKSmtoWW9LclVZd01tVVpCbzlSaEpEN2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBenBQMHEwSXRLaFlyZ24xeWs5YlVEeXh6RnVPNnNLUDdHU2JBODJoRlRaSldmMHFCCitrdmlzcmc3ekppNm91RjJualZWMFg4NTl1eVlMNnB6dmptaFRBVVdsSCt3SmhiMkhrSllUY0twc3hJKys1TGoKR1lIS2U4em84WFphbU1CZitqZHg0ajRtRDIwMUc1K01weGZWM1dHM3JGUElVR3JyK1VaMlR4bUJ2ck5qOGF6dApRZ2V4ZVJyVnY1M1VrSEVHMWdMTUtoQ0V1OUxBdGw2MFdLZzFxNE1tK1VGNkw2QXpVNjUza21lMWYwemtaWmZ0CmwxMGF1MlhXOFRycHNkQnRSQXJWeWxmY0h3WWxQS3VJdm53Ky9aWit5d2x0YUYrV04yVFRhcmRLdHcvbHhsMjgKMGJCKzNJS0Z5Rzh6Nno2TTV6cVVMQmMyeVZ1Y0IyMUMzZXhVSlFJREFRQUJBb0lCQVFDQzR4UCsvcXNISTR6bAozUDRmMWRuKzB6Y0lwYm0vK2VZN0JXYnowbmsyc1NYRStUeHBqbk5Rc1pLU0M2TVZXSzJEaUYrYm9YVGtrdnZLCkY4SEdJVldsaVFQSml5M2N0R2Uwdkd5ZXVGdzFiYllpUit0RVdnd2xiS3ViY2xYc3V0Y1UvdFJWZVBNOGl3RS8KUTFRbSt0OHlxWnRxd0pzRytQZ1N0U1o0Nzd4WlNzUlhKQ0RkdkZHUUVqS1p6R3FTSDRpNzRKT3pkTjF4L1NMUwpLWWJVdElaT25PSGZXSzJlc3BFZWVTcTIyVE85THJwSDZNZ2w0R1d5WURiM1Z4MUFwVTZTa0RuUVlUM0lEOWIxClNOY3dDd2lqQTN3a0R0NWQ3eFU5Q0VmbUpHN1RaQWNKTWhuN05CNWJEZTZrOWI0QlRMemxVTXEzRXljM3c2cnMKOG9temhrSUJBb0dCQU5jL212TWFVck9YNnZZUm10Y3lHYStnMUtkaFJVWEVRNGpqOWxPMGYrcmwvUEhvSVZLRgp2RFBPZ1pKVjdhNlJNSEFWNGN3dFRzWlB0VDdBWHBTSmhhVUNIUnZRTXk5bnBkUyt6UFFndW1rMFBXYjVqWnRECjZLd1RPZ29nY3B1RGFQMlcrSjdNZ1NKUUJIR2cvaUlJMlRUdEdGMGwySUJqUVUwTU9qa3QwUVNoQW9HQkFQV3cKSG9FdkphdHBxTXJFaUdBeElDaGJSY1ZmZHpqb1drcXhBKzN1aVlqRjhzOFI1aVhMRlJraTBNRzVvUC9RTHM0VgpjZElkVllDZXByS0g3SUdZMDVwcUllNG5wY2lNeHhTYjlOaVRNRldXeE1wV2lHaExmamdkNnk1b1dodTd3bytmCk9ScDhXeC9LWTI5YTdpZHJPRUEzWjRrRmEyNnhaZUJOS1dFWXNSMEZBb0dCQUlXNkVuNHVRR3NyV3VKOWxZRlUKc3ZpV0p3ZkdPczlaVzh2VU5ObFVMcFMxUml6VVZyOTZMcTdSQVZiMDQ3R3NxamM0b1F2RXFrZ3loUnZ6VDg5ZwprUk11K1A2cW51STR0cUl4MkF0anVleGFkRHRobDBSN01EYVh5MXMzUlh5d2E2NEErWDFPK0h0azB4MzFNMjNaCnFYaGtSTnE2QklQZkpsYkQzZmhnS3BlQkFvR0JBTElIWWNOWVo2SnpHTVY5YmhqTjREQitHdXV2aHBPdEFxaDIKNXBNRnM1Rnhac1dYZ2I3SERzMjlCYW9yR2Jma29kWGhnaTJ2NWVJaWxFWnY2ZmZxeHdKd2Y0KzBHUlJldG05Lwpwd2M4ZU55OE9ITXFDd1FRR0RFUHRQaFcwMXlmVEplSDEvZ1NQbkdsMVRHK29TM2RLdENWbFNlYnpzSlNON0UyCkdKTHNNb01GQW9HQkFNQVZIK2pLUVhYaWVWTGUyekNVRXRBVGJSMjFxMWp6TUR5NGQ1RE45U3ZnbmEyZkFnU2YKbWZYa1U4bElXTDN6clNmc3ErcnpnWmZUV0dwcHpYT1oyUUhwbzNhbHhTZ2VPUHAzWjFpV21xdkpXUG9SREYxQQpzVUxuU0x5cmcrQ2hhMk1hTzlDVlV6UG12clRjWXRqQUpOL0ZoWXROV3lNTFhBRUV3aEptc2MxNgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRUVhMVVJlRmU5Um9VbjhaU0JzdFZJVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRBeE5qRXlOVFEwTVZvWERUSXpNVEF4TmpFeU5UUTBNVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNNlQ5S3RDTFNvV0s0SjljcFBXMUE4c2N4Ymp1ckNqK3hrbXdQTm9SVTJTVm45SwpnZnBMNHJLNE84eVl1cUxoZHA0MVZkRi9PZmJzbUMrcWM3NDVvVXdGRnBSL3NDWVc5aDVDV0UzQ3FiTVNQdnVTCjR4bUJ5bnZNNlBGMldwakFYL28zY2VJK0pnOXROUnVmaktjWDFkMWh0NnhUeUZCcTYvbEdkazhaZ2I2elkvR3MKN1VJSHNYa2ExYitkMUpCeEJ0WUN6Q29RaEx2U3dMWmV0RmlvTmF1REp2bEJlaStnTTFPdWQ1Sm50WDlNNUdXWAo3WmRkR3J0bDF2RTY2YkhRYlVRSzFjcFgzQjhHSlR5cmlMNThQdjJXZnNzSmJXaGZsamRrMDJxM1NyY1A1Y1pkCnZOR3dmdHlDaGNodk0rcytqT2M2bEN3WE5zbGJuQWR0UXQzc1ZDVUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRTB3YStTakp4a1JBQjEvQndkZTk0YXVWemhnM2VCYVVtclYKZlN2SStVdnlPdDJPVkF0dDVUTFlGamJ2SGhWWlpxL1BKTmVWWVRJeU83TXF0ZjI5WlUvcU0wKzBsNjMwRThOWgp1TFVNMEpoNE5PcmNERXNRN2s2SGxyRkRZa2VHWHIxT1o2QnNxUzFJK1MremVjUkJmcE1KZTZpbUxmSVRKRjM2CnlEaDIzRDBQMFlFNlBNQlNGTDc4Yk5na3NBRVBMNmMzaVc5QkN2RldISzlBbWNuUnNyMFBHT2h1K3Q3SzRlc3AKdUtpWnQrWVB0aUJ4N09LVzJ6dU1GNjhaTG9rSFROcVhUSnRkZ1ZBby9pUWJQYzNPQXFvSzRGWlJ5ZDhkTElxWgo0K0NXR0xMOVdHdmJUdm9Oa1psZFl2V1pDUlVKSmtoWW9LclVZd01tVVpCbzlSaEpEN2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.1
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.1
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEwMTYxMjU0MzFaFw0yMzEwMTYxMjU0NTFaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEEqY+jcjh2x6UQH2oUCE3csKvcgKuhtWoAuV/qeC3dQ7x10OWYvsXAABalGgN
            B641oQxa4E0LTPtmYbgKgyEmjqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTM5gHohN3l1wIGD/k1NivwdCk2tjAKBggqhkjOPQQDAgNIADBFAiEA+dk9ZsVg
            suflDOfxWexf93oy464A3cjYVKiB5/NJQsECIHY7sAAi/iqnmJH+AX3Ps6/G7wm8
            a3upHA8HbHgZqRvP
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEwMTYxMjU0MzFaFw0yMzEwMTYxMjU0NTFaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEEqY+jcjh2x6UQH2oUCE3csKvcgKuhtWoAuV/qeC3dQ7x10OWYvsXAABalGgN
      B641oQxa4E0LTPtmYbgKgyEmjqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTM5gHohN3l1wIGD/k1NivwdCk2tjAKBggqhkjOPQQDAgNIADBFAiEA+dk9ZsVg
      suflDOfxWexf93oy464A3cjYVKiB5/NJQsECIHY7sAAi/iqnmJH+AX3Ps6/G7wm8
      a3upHA8HbHgZqRvP
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.1
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: deny
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: stable-2.12.1
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV3TVRZeE1qVTBNekZhRncweU16RXdNVFl4TWpVME5URmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVFcVkramNqaDJ4NlVRSDJvVUNFM2NzS3ZjZ0t1aHRXb0F1Vi9xZUMzZFE3eDEwT1dZdnNYQUFCYWxHZ04KQjY0MW9ReGE0RTBMVFB0bVliZ0tneUVtanFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVE01Z0hvaE4zbDF3SUdEL2sxTml2d2RDazJ0akFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBK2RrOVpzVmcKc3VmbERPZnhXZXhmOTNveTQ2NEEzY2pZVktpQjUvTkpRc0VDSUhZN3NBQWkvaXFubUpIK0FYM1BzNi9HN3dtOAphM3VwSEE4SGJIZ1pxUnZQCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSURKTzdnMVhPbjYrUjNWV3hRQWxzMkZNVTdsallRZUR4SDR2clFnVDhDc01vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRXFZK2pjamgyeDZVUUgyb1VDRTNjc0t2Y2dLdWh0V29BdVYvcWVDM2RRN3gxME9XWXZzWApBQUJhbEdnTkI2NDFvUXhhNEUwTFRQdG1ZYmdLZ3lFbWpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEwMTYxMjU0MzFaFw0yMzEwMTYxMjU0NTFaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEEqY+jcjh2x6UQH2oUCE3csKvcgKuhtWoAuV/qeC3dQ7x10OWYvsXAABalGgN
    B641oQxa4E0LTPtmYbgKgyEmjqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTM5gHohN3l1wIGD/k1NivwdCk2tjAKBggqhkjOPQQDAgNIADBFAiEA+dk9ZsVg
    suflDOfxWexf93oy464A3cjYVKiB5/NJQsECIHY7sAAi/iqnmJH+AX3Ps6/G7wm8
    a3upHA8HbHgZqRvP
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.1
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.1
        linkerd.io/proxy-version: stable-2.12.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 2d68830a831446efe0074698434547336afee59c6a76db6ce4e8fed9fc3cb379
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.1
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.1
        linkerd.io/proxy-version: stable-2.12.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 2d68830a831446efe0074698434547336afee59c6a76db6ce4e8fed9fc3cb379
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=deny
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.1
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  concurrencyPolicy: Replace
  schedule: "04 13 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.1
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.1
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.1
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.1
        linkerd.io/proxy-version: stable-2.12.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 2d68830a831446efe0074698434547336afee59c6a76db6ce4e8fed9fc3cb379
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV3TVRZeE1qVTBNekZhRncweU16RXdNVFl4TWpVME5URmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFRXFZK2pjamgyeDZVUUgyb1VDRTNjc0t2Y2dLdWh0V29BdVYvcWVDM2RRN3gxME9XWXZzWEFBQmFsR2dOCiAgICAgICAgQjY0MW9ReGE0RTBMVFB0bVliZ0tneUVtanFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlRNNWdIb2hOM2wxd0lHRC9rMU5pdndkQ2sydGpBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQStkazlac1ZnCiAgICAgICAgc3VmbERPZnhXZXhmOTNveTQ2NEEzY2pZVktpQjUvTkpRc0VDSUhZN3NBQWkvaXFubUpIK0FYM1BzNi9HN3dtOAogICAgICAgIGEzdXBIQThIYkhnWnFSdlAKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSURKTzdnMVhPbjYrUjNWV3hRQWxzMkZNVTdsallRZUR4SDR2clFnVDhDc01vQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVFcVkramNqaDJ4NlVRSDJvVUNFM2NzS3ZjZ0t1aHRXb0F1Vi9xZUMzZFE3eDEwT1dZdnNYCiAgICAgICAgQUFCYWxHZ05CNjQxb1F4YTRFMExUUHRtWWJnS2d5RW1qZz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qRXdNVFl4TWpVME16RmFGdzB5TXpFd01UWXhNalUwTlRGYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVFcVkramNqaDJ4NlVRSDJvVUNFM2NzS3ZjZ0t1aHRXb0F1Vi9xZUMzZFE3eDEwT1dZdnNYQUFCYWxHZ04KICBCNjQxb1F4YTRFMExUUHRtWWJnS2d5RW1qcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVE01Z0hvaE4zbDF3SUdEL2sxTml2d2RDazJ0akFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBK2RrOVpzVmcKICBzdWZsRE9meFdleGY5M295NDY0QTNjallWS2lCNS9OSlFzRUNJSFk3c0FBaS9pcW5tSkgrQVgzUHM2L0c3d204CiAgYTN1cEhBOEhiSGdacVJ2UAogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KcHJveHk6CiAgZGVmYXVsdEluYm91bmRQb2xpY3k6IGRlbnkK
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
